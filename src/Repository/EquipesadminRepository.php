<?php
namespace App\Repository;


use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Common\Persistence\ManagerRegistry;
use Symfony\Component\HttpFoundation\Session\SessionInterface;
use App\Entity\Equipesadmin;
use App\Entity\Memoiresinter;
/**
 * EquipesadminRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EquipesadminRepository extends ServiceEntityRepository
{

   
  public function __construct(ManagerRegistry $registry,SessionInterface $session)
                    {  
                        parent::__construct($registry, Equipesadmin::class);
                        $this->edition=$session->get('edition');
                       
                    }
        
         
 public function getEquipeInter(EquipesadminRepository $er): QueryBuilder
                {   
	    	
                    return $er ->createQueryBuilder('e')
                                    ->addOrderBy('e.edition','DESC')
                                     ->addOrderBy('e.centre','ASC')
                                     ->addOrderBy('e.numero','ASC');
                           
                        
                             
                }
                
 public function getEquipeDeposeMemoiresInter(EquipesadminRepository $er): QueryBuilder
                {   
	   
                    return $er ->createQueryBuilder('e')
                                     ->andWhere('e.edition =:edition')
                                     ->setParameter('edition',$er->edition)
                                     ->addOrderBy('e.centre','ASC')
                                     ->addOrderBy('e.numero','ASC');
                          
                             
                }               
   public function getEquipeNa(EquipesadminRepository $er): QueryBuilder
                {   
		
                    return $er ->createQueryBuilder('e')->select('e')
                                      ->andWhere('e.edition =:edition')
                                     ->setParameter('edition',$er->edition)
                                      ->andwhere('e.selectionnee= TRUE')
                                       ->orderBy('e.lettre','ASC');
                          
                             
                }
    public function getEquipesNatSansMemoire(EquipesadminRepository $er): QueryBuilder
    {
                 return $er ->createQueryBuilder('e')->select('e')
                                       ->where('e.selectionnee= TRUE')
                                       ->orderBy('e.lettre','ASC');
        
        
    }
                
       
}